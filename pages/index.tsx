import Head from "next/head";
import ProjectContainer from "../components/projects/projectContainer";
import clientPromise from "../lib/mongodb";
import { Project } from "../components/types/project";
import ExperienceContainer from "../components/experience/experienceContainer";

export default function Home({
  Projects,
  Experiences,
}: {
  Projects: Project[];
  Experiences: Project[];
}) {
  return (
    <>
      <Head>
        <title>Ajay Ganesh!</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <p>
        Hello! I&apos;m a junior at the University of Michigan studying Computer
        Science. I&apos;m super passionate about Software Engineering, and
        I&apos;d love to share that passion with you! On this site, you can find
        projects that I&apos;ve worked on and code that I&apos;m experimenting
        with.
      </p>
      <div className="divider"></div>
      <ExperienceContainer Experiences={Experiences} />
      <div className="divider"></div>
      <ProjectContainer Projects={Projects} />
      <div className="divider" />
    </>
  );
}

export async function getStaticProps() {
  try {
    const client = await clientPromise;
    const projects = await client
      .db("Portfolio")
      .collection("Projects")
      .find({
        experience: false,
      }).sort({
        order: -1
      })
      .project({
        name: 1,
        tags: 1,
        link: 1,
        img: 1,
        visit: 1,
        _id: 0,
      })
      .toArray();

    const experiences = await client
      .db("Portfolio")
      .collection("Projects")
      .find({
        experience: true,
      }).sort({
        order: -1
      })
      .project({
        name: 1,
        tags: 1,
        link: 1,
        img: 1,
        visit: 1,
        _id: 0,
      })
      .toArray();
    return {
      props: { Projects: projects, Experiences: experiences },
      revalidate: 3600,
    };
  } catch (e) {
    console.error(e);
    return {
      props: { Projects: [], Experiences: [] },
    };
  }
}
